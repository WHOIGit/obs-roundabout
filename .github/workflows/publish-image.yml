name: Create and publish a package
on:
  push:
#    branches: ['release']
    branches: ['automated_tests']

# Publish `v1.2.3` tags as releases.
    tags:
       - test
#      - v*

#  pull_request:
#    branches: [ main ]

env:
  IMAGE_NAME: ooicgsn-roundabout

jobs:
  setup-build-publish:
    name: Setup, Build, and Publish
    runs-on: ubuntu-16.04

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Building Docker application
        run: |
            mv .envs.example .envs
            docker-compose --file local.yml build

      - name: Starting Docker application
        run: docker-compose --file local.yml up --detach

#      - name: Check for missing migrations
#        run: |
#          docker-compose --file local.yml run --rm django 
#          python manage.py makemigrations --check

#      - name: Running Django system checks
#        run: |
#          docker-compose --file local.yml run --rm django 
#          python manage.py check

#      - name: Running Django tests
#        run: |
#          docker-compose --file local.yml run --rm django
#          python manage.py test

      - name: Running Automated tests
        run:  |
          docker-compose -f docker-compose-testing.yml run --rm tests
          sh -c "until curl -Is http://localhost:8000; do echo 'sleeping'; sleep 10; done &&
                 google-chrome --version && chromedriver --version"
          ls -a
          ./RunAllTests-Chrome-Linux.bat

#                 ./RunAllTests-Chrome-Linux.bat"
#                 nodejs -v &&

      - name: Stopping Docker application
        run:  docker-compose --file local.yml down

  push:
    runs-on: ubuntu-16.04
    # Ensure automated test job passes before pushing image.
    needs: setup-build-publish

    if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v2

      - name: Log into Github Container registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin

      - name: Push image
        run: |
          IMAGE_ID=docker.pkg.github.com/${{ github.repository }}/$IMAGE_NAME

          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
