name: Create and publish a package
on:
  push:
    branches: 
      - 'release-**'
      - 'automated_tests'

env:
  IMAGE_NAME: ooicgsn-roundabout

jobs:
  setup-build-publish:
    name: Setup, Build, and Publish
    runs-on: ubuntu-16.04

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Building Production Docker application
        run: |
            mv .envs.example .envs
            #docker-compose --file local.yml build
            docker build -f compose/production/django/Dockerfile -t ghcr.io/whoigit/$IMAGE_NAME .

      #- name: Starting Docker application
        # The Django start script will run migrations for us
        #run: docker-compose --file local.yml up --detach

      #- name: Check for missing migrations
      #  run: |
          #docker-compose --file local.yml run --rm django python manage.py makemigrations --check

      #- name: Running Django system checks
       # run: |
          #docker-compose --file local.yml run --rm django python manage.py check

     # - name: Running Django tests
      #  run: |
          #docker-compose --file local.yml run --rm django python manage.py test

      - name: Running Automated tests
        run:  |
          google-chrome --version
          chromedriver --version
          echo node.exe version
          node -v
          echo
          docker-compose -f docker-compose-testing.yml build tests
          docker-compose -f docker-compose-testing.yml run --rm tests ./RunAllTests-Chrome-Linux.bat

      - name: Tag & Push Release Image
        if: contains(github.ref, 'release')
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
          IMAGE_ID=ghcr.io/${{ github.repository }}
        
          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

          # Strip git ref prefix from branch
          BRANCH=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Strip "release-" prefix from version
          VERSION=$(echo $BRANCH | sed -e 's/.*-//')
            
          docker tag $IMAGE_ID $IMAGE_ID:$VERSION

          echo "IMAGE_ID:"
          echo $IMAGE_ID
          echo "VERSION:"
          echo $VERSION
          docker image ls

          docker push $IMAGE_ID:$VERSION

      - name: Stopping Docker application
        run:  docker-compose --file local.yml down

