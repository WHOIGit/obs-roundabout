version: '3.5'

volumes:
  production_postgres_data: {}
  production_postgres_data_backups: {}
  production_nginx: {}
  static_volume: {}
  media_volume: {}
  alfresco-repo-data: {}
  alfresco-postgres-data: {}
  alfresco-solr-data: {}

services:
  django:
    build:
      context: .
      dockerfile: ./compose/production/django/Dockerfile
    image: roundabout_production_django
    container_name: django
    depends_on:
      - postgres
      - redis
    volumes:
      - static_volume:/app/staticfiles  # <-- bind the static files
      - media_volume:/app/media  # <-- bind the media files
    env_file:
      - ./.envs/.production/.django
      - ./.envs/.production/.postgres
    restart: unless-stopped
    command: /start
    networks:
      - roundabout-network

  postgres:
    build:
      context: .
      dockerfile: ./compose/production/postgres/Dockerfile
    image: roundabout_production_postgres
    container_name: postgres
    volumes:
      - production_postgres_data:/var/lib/postgresql/data
      - production_postgres_data_backups:/backups
    env_file:
      - ./.envs/.production/.postgres
    restart: unless-stopped
    networks:
      - roundabout-network

  nginx:
    build:
      context: .
      dockerfile: ./compose/production/nginx/Dockerfile
    image: roundabout_production_nginx
    container_name: nginx
    depends_on:
      - django
    volumes:
      - production_nginx:/var/log/nginx
      - ./.ssl/whoi_certs:/etc/ssl/whoi_certs/ # bind a local directory with the WHOI SSL certs
    ports:
      - "0.0.0.0:80:80"
      - "0.0.0.0:443:443"
    restart: unless-stopped
    networks:
      - roundabout-network

  redis:
    image: redis:3.2
    restart: unless-stopped
    networks:
      - roundabout-network

  ### Alfreso Community Edition deployment containers: alfresco, alfresco-share, alfresco-postgres, alfresco-solr6
  alfresco:
    # image: alfresco/alfresco-content-repository-community:6.0.5-ea
    build: ./alfresco
    container_name: alfresco
    environment:
        JAVA_OPTS : "
            -Ddb.driver=org.postgresql.Driver
            -Ddb.username=alfresco
            -Ddb.password=alfresco
            -Ddb.url=jdbc:postgresql://postgres:5432/alfresco
            -Dsolr.host=solr6
            -Dsolr.port=8983
            -Dsolr.secureComms=none
            -Dsolr.base.url=/solr
            -Dindex.subsystem.name=solr6
            -Ddeployment.method=DOCKER_COMPOSE
            "
    volumes:
      - alfresco-repo-data:/usr/local/tomcat/alf_data
    ports:
      - 21:2121   #FTP port
      - 25:2525   #SMTP port
      - 143:1143  #IMAP port
#     - 445:1145      #CIFS
#     - 137:1137/udp  #CIFS
#     - 138:1138/udp  #CIFS
#     - 139:1139      #CIFS

  alfresco-share:
    # image: alfresco/alfresco-share:6.0.a
    build: ./share
    container_name: alfresco-share
    environment:
      - REPO_HOST=alfresco
      - REPO_PORT=8080

  alfresco-postgres:
    image: postgres:10.1
    container_name: alfresco-postgres
    environment:
      - POSTGRES_PASSWORD=alfresco
      - POSTGRES_USER=alfresco
      - POSTGRES_DB=alfresco
    volumes:
       - alfresco-postgres-data:/var/lib/postgresql/data
    ports:
        - 5432:5432

  alfresco-solr6:
    image: alfresco/alfresco-search-services:1.1.1
    container_name: alfresco-solr6
    environment:
        #Solr needs to know how to register itself with Alfresco
        - SOLR_ALFRESCO_HOST=alfresco
        - SOLR_ALFRESCO_PORT=8080
        #Alfresco needs to know how to call solr
        - SOLR_SOLR_HOST=solr6
        - SOLR_SOLR_PORT=8983
        #Create the default alfresco and archive cores
        - SOLR_CREATE_ALFRESCO_DEFAULTS=alfresco,archive
    volumes:
      - alfresco-solr-data:/opt/alfresco-search-services/data

networks:
  roundabout-network:
    name: roundabout-network
    driver: bridge
