"""
# Copyright (C) 2019-2020 Woods Hole Oceanographic Institution
#
# This file is part of the Roundabout Database project ("RDB" or 
# "ooicgsn-roundabout").
#
# ooicgsn-roundabout is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 2 of the License, or
# (at your option) any later version.
#
# ooicgsn-roundabout is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with ooicgsn-roundabout in the COPYING.md file at the project root.
# If not, see <http://www.gnu.org/licenses/>.
"""

# Generated by Django 2.2.4 on 2019-10-14 14:48

import datetime
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Build',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('build_number', models.CharField(max_length=255)),
                ('build_notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('detail', models.TextField(blank=True)),
                ('is_deployed', models.BooleanField(default=False)),
                ('time_at_sea', models.DurationField(blank=True, default=datetime.timedelta(0), null=True)),
                ('flag', models.BooleanField(choices=[(True, 'Flagged'), (False, 'Unflagged')], default=False)),
            ],
            options={
                'ordering': ['assembly', 'build_number'],
            },
        ),
        migrations.CreateModel(
            name='BuildAction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_type', models.CharField(choices=[('buildadd', 'Add Build'), ('locationchange', 'Location Change'), ('subassemblychange', 'Subassembly Change'), ('startdeploy', 'Start Deployment'), ('removefromdeployment', 'Remove from Deployment'), ('deploymentburnin', 'Deployment Burnin'), ('deploymenttosea', 'Deployment to Sea'), ('deploymentupdate', 'Deployment Update'), ('deploymentrecover', 'Deployment Recovered'), ('test', 'Test'), ('note', 'Note'), ('historynote', 'Historical Note'), ('ticket', 'Work Ticket'), ('flag', 'Flag'), ('retirebuild', 'Retire Build')], max_length=20)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('detail', models.TextField(blank=True)),
            ],
            options={
                'ordering': ['-created_at', 'action_type'],
            },
        ),
        migrations.CreateModel(
            name='BuildSnapshot',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deployment_status', models.CharField(blank=True, max_length=255)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('notes', models.TextField(blank=True)),
                ('time_at_sea', models.DurationField(blank=True, default=datetime.timedelta(0), null=True)),
            ],
            options={
                'ordering': ['build', 'deployment', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PhotoNote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo', models.FileField(upload_to='notes/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf', 'doc', 'docx', 'xls', 'xlsx', 'png', 'jpg', 'jpeg', 'gif', 'csv'])])),
                ('action', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='build_photos', to='builds.BuildAction')),
                ('build', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='build_photos', to='builds.Build')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='build_photos', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='InventorySnapshot',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('order', models.CharField(blank=True, db_index=True, max_length=255)),
                ('lft', models.PositiveIntegerField(db_index=True, editable=False)),
                ('rght', models.PositiveIntegerField(db_index=True, editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(db_index=True, editable=False)),
                ('build', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='inventory_snapshots', to='builds.BuildSnapshot')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
